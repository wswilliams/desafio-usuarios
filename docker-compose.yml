version: '3.8'

services:
  clients:
    build: 
      context: ./CrudUsuarios
      dockerfile: ./server/Dockerfile
    image: estudante/front
    container_name: front-client
    ports:
      - 3001:80
    volumes:
      - ./CrudUsuarios/:/app/
    stdin_open: true
    tty: true
    depends_on:
      - service
    restart: unless-stopped
    networks:
      - netApi

  service:
    build:
      context: ./fastapi-desafio/src
      dockerfile: Dockerfile
    command: |
      bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000'
    volumes:
      - ./fastapi-desafio/src/:/usr/src/app/
    ports:
      - 8003:8000
    environment:
      - DATABASE_URL=postgresql://fastapi:fastapi@db/fastapi_dev
      - SECRET_KEY=supersecretkey
      - ALGORITHM=HS256
      - PYTHONPATH=/usr/src/app/src
    depends_on:
      - db
    networks:
      - netApi

  alembic:
    build:
      context: ./fastapi-desafio/src
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://fastapi:fastapi@db/fastapi_dev
      - PYTHONPATH=/usr/src/app/src
    depends_on:
      - db
    working_dir: /usr/src/app/
    volumes:
      - ./fastapi-desafio/src/:/usr/src/app/
    command: ["./wait-for-it.sh", "db:5432", "--", "alembic", "upgrade", "head"]
    networks:
      - netApi

  db:
    container_name: db
    image: postgres:15.1-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: fastapi
      POSTGRES_PASSWORD: fastapi
      POSTGRES_DB: fastapi_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - netApi

volumes:
  postgres_data:

networks:
  netApi:
    driver: bridge